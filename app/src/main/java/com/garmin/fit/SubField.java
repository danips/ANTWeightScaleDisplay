////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2017 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 20.38Release
// Tag = production/akw/20.38.00-0-geccbce3
////////////////////////////////////////////////////////////////////////////////


package com.garmin.fit;

import java.util.ArrayList;

public class SubField {
   private static class SubFieldMap {
      private final int refFieldNum;
      private final long refFieldValue;

      protected SubFieldMap(final int refFieldNum, final long refFieldValue) {
         this.refFieldNum = refFieldNum;
         this.refFieldValue = refFieldValue;
      }

      protected boolean canMesgSupport(Mesg mesg) {
         Field field = mesg.getField(refFieldNum);

         if (field != null) {
            Long value = field.getLongValue(0, Fit.SUBFIELD_INDEX_MAIN_FIELD);
            if (value != null) {
                return value == refFieldValue;
            }            
         }

         return false;
      }
   }

   protected final String name;
   protected final int type;
   protected final double scale;
   protected final double offset;
   protected final String units;
   private final ArrayList<SubFieldMap> maps;
   protected final ArrayList<FieldComponent> components;

   protected SubField(final SubField subField) {
      if (subField == null) {
         this.name = "unknown";
         this.type = 0;
         this.scale = 1;
         this.offset = 0;
         this.units = "";
         this.maps = new ArrayList<>();
         this.components = new ArrayList<>();
         return;
      }

      this.name = subField.name;
      this.type = subField.type;
      this.scale = subField.scale;
      this.offset = subField.offset;
      this.units = subField.units;
      this.maps = subField.maps;
      this.components = subField.components;
   }

   protected SubField(String name, int type, double scale, double offset, String units) {
      this.name = name;
      this.type = type;
      this.scale = scale;
      this.offset = offset;
      this.units = units;
      this.maps = new ArrayList<>();
      this.components = new ArrayList<>();
   }

   protected String getName() {
      return name;
   }

   protected int getType() {
      return type;
   }

   protected String getUnits() {
      return units;
   }

   protected void addMap(int refFieldNum, long refFieldValue) {
      maps.add(new SubFieldMap(refFieldNum, refFieldValue));
   }

   protected void addComponent(FieldComponent component){
      components.add(component);
   }

   public boolean canMesgSupport(Mesg mesg) {
      for (SubFieldMap map : maps) {
         if (map.canMesgSupport(mesg)) {
            return true;
         }
      }
      return false;
   }   
}